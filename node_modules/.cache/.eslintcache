[{"/home/luis/Escritorio/telefonica2/nft_marketplace/src/index.js":"1","/home/luis/Escritorio/telefonica2/nft_marketplace/src/serviceWorker.js":"2","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/App.js":"3","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/MyPurchases.js":"4","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Create.js":"5","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/MyListedItems.js":"6","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Home.js":"7","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Navbar.js":"8","/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/uriUtils.js":"9","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/index.js":"10","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/serviceWorker.js":"11","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/App.js":"12","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/MyPurchases.js":"13","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Create.js":"14","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Home.js":"15","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/MyListedItems.js":"16","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Navbar.js":"17","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/uriUtils.js":"18","/home/luis/Escritorio/NFT_marketplace/NFT-market/src/index.js":"19","/home/luis/Escritorio/NFT_marketplace/NFT-market/src/serviceWorker.js":"20","/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/App.js":"21","/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/MyListedItems.js":"22","/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/Create.js":"23","/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/MyPurchases.js":"24","/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/Home.js":"25","/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/Navbar.js":"26","/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/uriUtils.js":"27","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/index.js":"28","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/serviceWorker.js":"29","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/App.js":"30","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/MyListedItems.js":"31","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/Home.js":"32","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/Create.js":"33","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/MyPurchases.js":"34","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/Navbar.js":"35","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/uriUtils.js":"36"},{"size":492,"mtime":1687807862321,"results":"37","hashOfConfig":"38"},{"size":4951,"mtime":1687807862321,"results":"39","hashOfConfig":"38"},{"size":2954,"mtime":1687810463685,"results":"40","hashOfConfig":"38"},{"size":2394,"mtime":1687822080064,"results":"41","hashOfConfig":"38"},{"size":3001,"mtime":1687811100861,"results":"42","hashOfConfig":"38"},{"size":3121,"mtime":1687822005045,"results":"43","hashOfConfig":"38"},{"size":2903,"mtime":1687821875405,"results":"44","hashOfConfig":"38"},{"size":1966,"mtime":1687807862321,"results":"45","hashOfConfig":"38"},{"size":176,"mtime":1687820584287,"results":"46","hashOfConfig":"38"},{"size":492,"mtime":1687807862321,"results":"47","hashOfConfig":"48"},{"size":4951,"mtime":1687807862321,"results":"49","hashOfConfig":"48"},{"size":2954,"mtime":1687810463685,"results":"50","hashOfConfig":"48"},{"size":2394,"mtime":1687822080064,"results":"51","hashOfConfig":"48"},{"size":3001,"mtime":1687811100861,"results":"52","hashOfConfig":"48"},{"size":2903,"mtime":1687821875405,"results":"53","hashOfConfig":"48"},{"size":3121,"mtime":1687822005045,"results":"54","hashOfConfig":"48"},{"size":1988,"mtime":1687864013445,"results":"55","hashOfConfig":"48"},{"size":176,"mtime":1687820584287,"results":"56","hashOfConfig":"48"},{"size":492,"mtime":1687807862321,"results":"57","hashOfConfig":"58"},{"size":4951,"mtime":1687807862321,"results":"59","hashOfConfig":"58"},{"size":2954,"mtime":1687810463685,"results":"60","hashOfConfig":"58"},{"size":3479,"mtime":1687872808908,"results":"61","hashOfConfig":"58"},{"size":3001,"mtime":1687811100861,"results":"62","hashOfConfig":"58"},{"size":4172,"mtime":1687875097473,"results":"63","hashOfConfig":"58"},{"size":2915,"mtime":1687870377722,"results":"64","hashOfConfig":"58"},{"size":1976,"mtime":1687868084241,"results":"65","hashOfConfig":"58"},{"size":176,"mtime":1687820584287,"results":"66","hashOfConfig":"58"},{"size":492,"mtime":1687935173150,"results":"67","hashOfConfig":"68"},{"size":4951,"mtime":1687885402863,"results":"69","hashOfConfig":"68"},{"size":2813,"mtime":1687935408220,"results":"70","hashOfConfig":"68"},{"size":3479,"mtime":1687885402863,"results":"71","hashOfConfig":"68"},{"size":2915,"mtime":1687885402863,"results":"72","hashOfConfig":"68"},{"size":3001,"mtime":1687885402863,"results":"73","hashOfConfig":"68"},{"size":4083,"mtime":1687930478051,"results":"74","hashOfConfig":"68"},{"size":1976,"mtime":1687885402863,"results":"75","hashOfConfig":"68"},{"size":176,"mtime":1687885402863,"results":"76","hashOfConfig":"68"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o9pysi",{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"qibguf",{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"107"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"107"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"107"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"egdhuo",{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nzs2wv",{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"169"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"169"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"169"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},"/home/luis/Escritorio/telefonica2/nft_marketplace/src/index.js",[],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/serviceWorker.js",[],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/App.js",[],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/MyPurchases.js",["194"],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Create.js",[],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/MyListedItems.js",["195"],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Home.js",["196"],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/Navbar.js",[],[],"/home/luis/Escritorio/telefonica2/nft_marketplace/src/frontend/components/uriUtils.js",[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/index.js",[],[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/serviceWorker.js",[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/App.js",[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/MyPurchases.js",["197"],[],"import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { convertUriFormat } from './uriUtils.js';\n\nexport default function MyPurchases({ marketplace, nft, account }) {\n  const [loading, setLoading] = useState(true)\n  const [purchases, setPurchases] = useState([])\n  const loadPurchasedItems = async () => {\n    // Fetch purchased items from marketplace by quering Offered events with the buyer set as the user\n    const filter =  marketplace.filters.Bought(null,null,null,null,null,account)\n    const results = await marketplace.queryFilter(filter)\n    //Fetch metadata of each nft and add that to listedItem object.\n    const purchases = await Promise.all(results.map(async i => {\n      // fetch arguments from each result\n      i = i.args\n      // get uri url from nft contract\n      const newUri = await nft.tokenURI(i.tokenId)\n      const uri = convertUriFormat(newUri)\n      const response = await fetch(uri)\n      const metadata = await response.json()\n      // get total price of item (item price + fee)\n      const totalPrice = await marketplace.getTotalPrice(i.itemId)\n      // define listed item object\n      const imageUri = convertUriFormat(metadata.image) \n\n      let purchasedItem = {\n        totalPrice,\n        price: i.price,\n        itemId: i.itemId,\n        name: metadata.name,\n        description: metadata.description,\n        image: imageUri\n      }\n      return purchasedItem\n    }))\n    setLoading(false)\n    setPurchases(purchases)\n  }\n  useEffect(() => {\n    loadPurchasedItems()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {purchases.length > 0 ?\n        <div className=\"px-5 container\">\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n            {purchases.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Footer>{ethers.utils.formatEther(item.totalPrice)} ETH</Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No purchases</h2>\n          </main>\n        )}\n    </div>\n  );\n}","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Create.js",[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Home.js",["198"],[],"import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card, Button } from 'react-bootstrap'\nimport { convertUriFormat } from './uriUtils.js';\n\nconst Home = ({ marketplace, nft }) => {\n  const [loading, setLoading] = useState(true)\n  console.log(nft)\n  console.log(marketplace)\n  const [items, setItems] = useState([])\n  const loadMarketplaceItems = async () => {\n    // Load all unsold items\n    const itemCount = await marketplace.itemCount()\n    let items = []\n    for (let i = 1; i <= itemCount; i++) {\n      const item = await marketplace.items(i)\n      console.log(items)\n      if (!item.sold) {\n        // get uri url from nft contract\n        const newUri = await nft.tokenURI(item.tokenId)\n        const uri = convertUriFormat(newUri)\n        const response = await fetch(uri)\n        const metadata = await response.json()\n        // get total price of item (item price + fee)\n        const totalPrice = await marketplace.getTotalPrice(item.itemId)\n        const imageUri = convertUriFormat(metadata.image) \n        // Add item to items array\n        items.push({\n          totalPrice,\n          itemId: item.itemId,\n          seller: item.seller,\n          name: metadata.name,\n          description: metadata.description,\n          image: imageUri\n        })\n      }\n    }\n    setLoading(false)\n    setItems(items)\n  }\n\n  const buyMarketItem = async (item) => {\n    await (await marketplace.purchaseItem(item.itemId, { value: item.totalPrice })).wait()\n    loadMarketplaceItems()\n  }\n\n  useEffect(() => {\n    loadMarketplaceItems()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {items.length > 0 ?\n        <div className=\"px-5 container\">\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n            {items.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Body color=\"secondary\">\n                    <Card.Title>{item.name}</Card.Title>\n                    <Card.Text>\n                      {item.description}\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <div className='d-grid'>\n                      <Button onClick={() => buyMarketItem(item)} variant=\"primary\" size=\"lg\">\n                        Buy for {ethers.utils.formatEther(item.totalPrice)} ETH\n                      </Button>\n                    </div>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No listed assets</h2>\n          </main>\n        )}\n    </div>\n  );\n}\nexport default Home","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/MyListedItems.js",["199"],[],"import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { convertUriFormat } from './uriUtils.js';\n\nfunction renderSoldItems(items) {\n  return (\n    <>\n      <h2>Sold</h2>\n      <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n        {items.map((item, idx) => (\n          <Col key={idx} className=\"overflow-hidden\">\n            <Card>\n              <Card.Img variant=\"top\" src={item.image} />\n              <Card.Footer>\n                For {ethers.utils.formatEther(item.totalPrice)} ETH - Recieved {ethers.utils.formatEther(item.price)} ETH\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default function MyListedItems({ marketplace, nft, account }) {\n  const [loading, setLoading] = useState(true)\n  const [listedItems, setListedItems] = useState([])\n  const [soldItems, setSoldItems] = useState([])\n  const loadListedItems = async () => {\n    // Load all sold items that the user listed\n    const itemCount = await marketplace.itemCount()\n    let listedItems = []\n    let soldItems = []\n    for (let indx = 1; indx <= itemCount; indx++) {\n      const i = await marketplace.items(indx)\n      if (i.seller.toLowerCase() === account) {\n        // get uri url from nft contract\n        const newUri = await nft.tokenURI(i.tokenId)\n        const uri = convertUriFormat(newUri)\n        const response = await fetch(uri)\n        const metadata = await response.json()\n        // get total price of item (item price + fee)\n        const totalPrice = await marketplace.getTotalPrice(i.itemId)\n        // define listed item object\n        const imageUri = convertUriFormat(metadata.image) \n\n        let item = {\n          totalPrice,\n          price: i.price,\n          itemId: i.itemId,\n          name: metadata.name,\n          description: metadata.description,\n          image: imageUri\n        }\n        listedItems.push(item)\n        // Add listed item to sold items array if sold\n        if (i.sold) soldItems.push(item)\n      }\n    }\n    setLoading(false)\n    setListedItems(listedItems)\n    setSoldItems(soldItems)\n  }\n  useEffect(() => {\n    loadListedItems()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {listedItems.length > 0 ?\n        <div className=\"px-5 py-3 container\">\n            <h2>Listed</h2>\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n            {listedItems.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Footer>{ethers.utils.formatEther(item.totalPrice)} ETH</Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n            {soldItems.length > 0 && renderSoldItems(soldItems)}\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No listed assets</h2>\n          </main>\n        )}\n    </div>\n  );\n}","/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/Navbar.js",[],[],"/home/luis/Escritorio/telefonica3/nft_marketplace3/src/frontend/components/uriUtils.js",[],[],"/home/luis/Escritorio/NFT_marketplace/NFT-market/src/index.js",[],[],[],"/home/luis/Escritorio/NFT_marketplace/NFT-market/src/serviceWorker.js",[],[],"/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/App.js",[],[],"/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/MyListedItems.js",["200"],[],"/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/Create.js",[],[],"/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/MyPurchases.js",["201","202"],[],"/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/Home.js",["203"],[],"/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/Navbar.js",[],[],"/home/luis/Escritorio/NFT_marketplace/NFT-market/src/frontend/components/uriUtils.js",[],[],"/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/index.js",[],[],"/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/serviceWorker.js",[],[],[],"/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/App.js",[],[],"/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/MyListedItems.js",["204"],[],"import { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { convertUriFormat } from './uriUtils.js';\n\nfunction renderSoldItems(items) {\n  return (\n    <>\n      <h2>Sold</h2>\n      <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n        {items.map((item, idx) => (\n          <Col key={idx} className=\"overflow-hidden\">\n            <Card>\n              <Card.Img variant=\"top\" src={item.image} />\n              <Card.Footer>\n                For {ethers.utils.formatEther(item.totalPrice)} ETH - Received {ethers.utils.formatEther(item.price)} ETH\n              </Card.Footer>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nexport default function MyListedItems({ marketplace, nft, account }) {\n  const [loading, setLoading] = useState(true);\n  const [listedItems, setListedItems] = useState([]);\n  const [soldItems, setSoldItems] = useState([]);\n\n  const loadListedItems = async () => {\n    try {\n      // Load all sold items that the user listed\n      const itemCount = await marketplace.itemCount();\n      let listedItems = [];\n      let soldItems = [];\n\n      for (let indx = 1; indx <= itemCount; indx++) {\n        const i = await marketplace.items(indx);\n\n        if (i.seller.toLowerCase() === account) {\n          try {\n            // get uri url from nft contract\n            const newUri = await nft.tokenURI(i.tokenId);\n            const uri = convertUriFormat(newUri);\n            const response = await fetch(uri);\n            const metadata = await response.json();\n            // get total price of item (item price + fee)\n            const totalPrice = await marketplace.getTotalPrice(i.itemId);\n            // define listed item object\n            const imageUri = convertUriFormat(metadata.image);\n\n            let item = {\n              totalPrice,\n              price: i.price,\n              itemId: i.itemId,\n              name: metadata.name,\n              description: metadata.description,\n              image: imageUri\n            };\n\n            listedItems.push(item);\n            // Add listed item to sold items array if sold\n            if (i.sold) soldItems.push(item);\n          } catch (error) {\n            console.log('Error fetching metadata:', error);\n          }\n        }\n      }\n\n      setLoading(false);\n      setListedItems(listedItems);\n      setSoldItems(soldItems);\n    } catch (error) {\n      console.log('Error loading listed items:', error);\n    }\n  };\n\n  useEffect(() => {\n    loadListedItems();\n  }, []);\n\n  if (loading) {\n    return (\n      <main style={{ padding: '1rem 0' }}>\n        <h2>Loading...</h2>\n      </main>\n    );\n  }\n\n  return (\n    <div className=\"flex justify-center\">\n      {listedItems.length > 0 ? (\n        <div className=\"px-5 py-3 container\">\n          <h2>Listed</h2>\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n            {listedItems.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Footer>{ethers.utils.formatEther(item.totalPrice)} ETH</Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n          {soldItems.length > 0 && renderSoldItems(soldItems)}\n        </div>\n      ) : (\n        <main style={{ padding: '1rem 0' }}>\n          <h2>No listed assets</h2>\n        </main>\n      )}\n    </div>\n  );\n}\n","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/Home.js",["205"],[],"import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card, Button } from 'react-bootstrap'\nimport { convertUriFormat } from './uriUtils.js';\n\nconst Home = ({ marketplace, nft }) => {\n  const [loading, setLoading] = useState(true)\n  console.log(nft)\n  console.log(marketplace)\n  const [items, setItems] = useState([])\n  const loadMarketplaceItems = async () => {\n    // Load all unsold items\n    const itemCount = await marketplace.itemCount()\n    let items = []\n    for (let i = 1; i <= itemCount; i++) {\n      const item = await marketplace.items(i)\n      console.log(items)\n      if (!item.sold) {\n        // get uri url from nft contract\n        const newUri = await nft.tokenURI(item.tokenId)\n        const uri = convertUriFormat(newUri)\n        const response = await fetch(uri)\n        const metadata = await response.json()\n        // get total price of item (item price + fee)\n        const totalPrice = await marketplace.getTotalPrice(item.itemId)\n        const imageUri = convertUriFormat(metadata.image) \n        // Add item to items array\n        items.push({\n          totalPrice,\n          itemId: item.itemId,\n          seller: item.seller,\n          name: metadata.name,\n          description: metadata.description,\n          image: imageUri\n        })\n      }\n    }\n    setLoading(false)\n    setItems(items)\n  }\n\n  const buyMarketItem = async (item) => {\n    await (await marketplace.purchaseItem(item.itemId, { value: item.totalPrice })).wait()\n    loadMarketplaceItems()\n  }\n\n  useEffect(() => {\n    loadMarketplaceItems()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {items.length > 0 ?\n        <div className=\"px-5 container\">\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n            {items.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Body color=\"secondary\">\n                    <Card.Title>{item.name}</Card.Title>\n                    <Card.Text>\n                      {item.description}\n                    </Card.Text>\n                  </Card.Body>\n                    <Card.Footer>\n                      <div className='d-grid'>\n                        <Button onClick={() => buyMarketItem(item)} variant=\"primary\" size=\"lg\">\n                        Buy for {ethers.utils.formatEther(item.totalPrice)} ETH\n                        </Button>\n                      </div>\n                    </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No listed assets</h2>\n          </main>\n        )}\n    </div>\n  );\n}\nexport default Home","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/Create.js",[],[],"/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/MyPurchases.js",["206","207","208","209","210"],[],"import { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Row, Col, Card ,Form, Button} from 'react-bootstrap';\nimport { convertUriFormat } from './uriUtils.js';\n\n\nexport default function MyPurchases({ marketplace, nft, account }) {\n  const [loading, setLoading] = useState(true);\n  const [purchases, setPurchases] = useState([]);\n  const [price, setPrice] = useState(null)\n\n  const loadPurchasedItems = async () => {\n    try {\n      // Fetch purchased items from marketplace by querying Offered events with the buyer set as the user\n      const filter = marketplace.filters.Bought(null, null, null, null, null, account);\n      const results = await marketplace.queryFilter(filter);\n      // Fetch metadata of each nft and add that to listedItem object.\n      const purchases = await Promise.all(results.map(async (i) => {\n        try {\n          // fetch arguments from each result\n          i = i.args;\n\n          // get uri url from nft contract\n          const newUri = await nft.tokenURI(i.tokenId);\n          const uri = convertUriFormat(newUri);\n          const response = await fetch(uri);\n          const metadata = await response.json();\n\n          // get total price of item (item price + fee)\n          const totalPrice = await marketplace.getTotalPrice(i.itemId);\n\n          // define listed item object\n          const imageUri = convertUriFormat(metadata.image);\n\n          let purchasedItem = {\n            totalPrice,\n            price: i.price,\n            itemId: i.itemId,\n            name: metadata.name,\n            description: metadata.description,\n            image: imageUri\n          };\n\n          return purchasedItem;\n        } catch (error) {\n          console.log(\"Error\", error);\n          return null;\n        }\n      }));\n\n      // Filter out any null values from the purchases array\n      const validPurchases = purchases.filter(item => item !== null);\n\n      setLoading(false);\n      setPurchases(validPurchases);\n    } catch (error) {\n      console.log(\"Error loading purchased items:\", error);\n    }\n  };\n\n  const burnItem = async (purchasedItem) => {\n    await (await nft.burn(purchasedItem.itemId)).wait();\n    loadPurchasedItems();\n  };\n\n//Hardhat funciona porque tiene nodo\n  /*const obtenerPropietarios = async(nft, purchasedItem) => {\n      console.log(purchasedItem.itemId)\n \n\n      const tokenId =  purchasedItem.itemId.toNumber();\n      console.log(nft)\n      \n\n      const propietario = await nft.functions.ownerOf(tokenId);\n      console.log(propietario)\n  \n      if (propietario === '0x0000000000000000000000000000000000000000') {\n        console.log(`El token ${tokenId} no tiene un propietario válido.`);\n      } else {\n        console.log(`El propietario del token ${tokenId} es ${propietario}.`);\n      }   +++ <Button onClick={() => obtenerPropietarios(nft,item)} variant=\"danger\" size=\"lg\">\n                        A\n                      </Button>\n    }*/\n  \n\n  useEffect(() => {\n    loadPurchasedItems();\n  }, []);\n  if (loading) {\n    return (\n      <main style={{ padding: \"1rem 0\" }}>\n        <h2>Loading...</h2>\n      </main>\n    );\n  }\n  return (\n    <div className=\"flex justify-center\">\n      {purchases.length > 0 ? (\n        <div className=\"px-5 container\">\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n            {purchases.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Footer>\n                    \n                    <div className='d-grid' style={{ margin: '10px' }}>\n                      <Button onClick={() => burnItem(item)} variant=\"danger\" size=\"lg\">\n                        Burn \n                      </Button>\n                      \n                    </div>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </div>\n      ) : (\n        <main style={{ padding: \"1rem 0\" }}>\n          <h2>No purchases</h2>\n        </main>\n      )}\n    </div>\n  );\n}","/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/Navbar.js",[],[],"/home/luis/Escritorio/captureTheTelefonica/NFT-market/src/frontend/components/uriUtils.js",[],[],{"ruleId":"211","severity":1,"message":"212","line":42,"column":6,"nodeType":"213","endLine":42,"endColumn":8,"suggestions":"214"},{"ruleId":"211","severity":1,"message":"215","line":67,"column":6,"nodeType":"213","endLine":67,"endColumn":8,"suggestions":"216"},{"ruleId":"211","severity":1,"message":"217","line":49,"column":6,"nodeType":"213","endLine":49,"endColumn":8,"suggestions":"218"},{"ruleId":"211","severity":1,"message":"212","line":42,"column":6,"nodeType":"213","endLine":42,"endColumn":8,"suggestions":"219"},{"ruleId":"211","severity":1,"message":"217","line":49,"column":6,"nodeType":"213","endLine":49,"endColumn":8,"suggestions":"220"},{"ruleId":"211","severity":1,"message":"215","line":67,"column":6,"nodeType":"213","endLine":67,"endColumn":8,"suggestions":"221"},{"ruleId":"211","severity":1,"message":"215","line":81,"column":6,"nodeType":"213","endLine":81,"endColumn":8,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":81,"column":6,"nodeType":"213","endLine":81,"endColumn":8,"suggestions":"227"},{"ruleId":"211","severity":1,"message":"217","line":49,"column":6,"nodeType":"213","endLine":49,"endColumn":8,"suggestions":"228"},{"ruleId":"211","severity":1,"message":"215","line":81,"column":6,"nodeType":"213","endLine":81,"endColumn":8,"suggestions":"229"},{"ruleId":"211","severity":1,"message":"217","line":49,"column":6,"nodeType":"213","endLine":49,"endColumn":8,"suggestions":"230"},{"ruleId":"223","severity":1,"message":"224","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":16},{"ruleId":"223","severity":1,"message":"231","line":3,"column":26,"nodeType":"225","messageId":"226","endLine":3,"endColumn":30},{"ruleId":"223","severity":1,"message":"232","line":10,"column":10,"nodeType":"225","messageId":"226","endLine":10,"endColumn":15},{"ruleId":"223","severity":1,"message":"233","line":10,"column":17,"nodeType":"225","messageId":"226","endLine":10,"endColumn":25},{"ruleId":"211","severity":1,"message":"212","line":90,"column":6,"nodeType":"213","endLine":90,"endColumn":8,"suggestions":"234"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPurchasedItems'. Either include it or remove the dependency array.","ArrayExpression",["235"],"React Hook useEffect has a missing dependency: 'loadListedItems'. Either include it or remove the dependency array.",["236"],"React Hook useEffect has a missing dependency: 'loadMarketplaceItems'. Either include it or remove the dependency array.",["237"],["238"],["239"],["240"],["241"],"no-unused-vars","'ethers' is defined but never used.","Identifier","unusedVar",["242"],["243"],["244"],["245"],"'Form' is defined but never used.","'price' is assigned a value but never used.","'setPrice' is assigned a value but never used.",["246"],{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"247","fix":"253"},{"desc":"251","fix":"254"},{"desc":"249","fix":"255"},{"desc":"249","fix":"256"},{"desc":"247","fix":"257"},{"desc":"251","fix":"258"},{"desc":"249","fix":"259"},{"desc":"251","fix":"260"},{"desc":"247","fix":"261"},"Update the dependencies array to be: [loadPurchasedItems]",{"range":"262","text":"263"},"Update the dependencies array to be: [loadListedItems]",{"range":"264","text":"265"},"Update the dependencies array to be: [loadMarketplaceItems]",{"range":"266","text":"267"},{"range":"268","text":"263"},{"range":"269","text":"267"},{"range":"270","text":"265"},{"range":"271","text":"265"},{"range":"272","text":"263"},{"range":"273","text":"267"},{"range":"274","text":"265"},{"range":"275","text":"267"},{"range":"276","text":"263"},[1589,1591],"[loadPurchasedItems]",[2210,2212],"[loadListedItems]",[1589,1591],"[loadMarketplaceItems]",[1589,1591],[1589,1591],[2210,2212],[2555,2557],[2743,2745],[1589,1591],[2555,2557],[1589,1591],[2997,2999]]